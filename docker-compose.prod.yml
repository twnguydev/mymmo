services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_HOST=${MYSQL_HOST}
      - DATABASE_PORT=${MYSQL_PORT}
      - DATABASE_USER=${MYSQL_USER}
      - DATABASE_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - DATABASE_NAME=${MYSQL_DATABASE}
    env_file:
      - .env.production
    depends_on:
      - db

  front:
    build:
      context: ./front
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
    env_file:
      - .env.production

  db:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    env_file:
      - .env.production
    volumes:
      - mysql_prod_data:/var/lib/mysql

volumes:
  mysql_prod_data:
