services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
      args:
        - NODE_ENV=${NODE_ENV}
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    env_file:
      - .env.development
    depends_on:
      db:
        condition: service_healthy
    command: npm run start:dev

  front:
    build:
      context: ./front
      dockerfile: Dockerfile.dev
      args:
        - NODE_ENV=${NODE_ENV}
    volumes:
      - ./front:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - NEXT_PUBLIC_API_URL=http://localhost:${API_PORT}
    env_file:
      - ./.env.${NODE_ENV:-dev}
    command: npm run dev

  db:
    image: mysql:8.0
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    env_file:
      - .env.development
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 20

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "${PMA_PORT}:80"
    environment:
      - PMA_HOST=db
      - PMA_USER=root
      - PMA_PASSWORD=${MYSQL_ROOT_PASSWORD}
    depends_on:
      - db

volumes:
  mysql_data: